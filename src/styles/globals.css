/* ---- Base ---- */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');
*,
*::before,
*::after { box-sizing: border-box; }

html, body, #root { height: 100%; }

html { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

body {
  margin: 0;
  background: var(--bg, #fff);
  color: var(--text-700, #374151);
  font-family: var(--font-sans, "Poppins", ui-sans-serif, system-ui);
  line-height: 1.6;
}

/* Headings */
h1, h2, h3 { color: var(--text-900, #1f2937); margin: 0 0 0.6em; }
h1 { font-size: var(--h1, clamp(2.2rem, 4vw, 3.2rem)); font-weight: 700; }
h2 { font-size: var(--h2, clamp(1.4rem, 2.2vw, 2rem)); font-weight: 600; }
h3 { font-size: var(--h3, clamp(1.1rem, 1.6vw, 1.3rem)); font-weight: 600; }

/* Sections / vertical rhythm */
section { padding-block: 64px; }

main { display: flow-root; }

/* Full-bleed section that escapes a centered container */
.full-bleed {
  position: relative;
  width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
}


html, body { overflow-x: clip; }

section { padding-top: 0; margin-top: 0; }

/* ==== Reusable subtle grid background ==== */
:root{
  --grid-color: rgba(230,71,149,.05);
  --grid-size: 40px;
}


.bg-grid {
  position: relative;
  z-index: 0;           
}

.bg-grid::before {
  content: "";
  position: absolute;
  inset: -10vh 0 -10vh 0;      
  pointer-events: none;
  z-index: 0;
  background:
    radial-gradient(900px 450px at 82% -10%, var(--brand-50,#fff5f9) 0%, transparent 60%),
    radial-gradient(900px 450px at 10% 120%, var(--brand-25,#fff8fb) 0%, transparent 60%),
    /* grid lines */
    repeating-linear-gradient(
      0deg,
      var(--grid-color) 0px,
      var(--grid-color) 1px,
      transparent 1px,
      transparent var(--grid-size)
    ),
    repeating-linear-gradient(
      90deg,
      var(--grid-color) 0px,
      var(--grid-color) 1px,
      transparent 1px,
      transparent var(--grid-size)
    );
}


.bg-grid > * { position: relative; z-index: 1; }


.bg-grid[data-parallax="y"]::before {
  will-change: transform;
  transform: translateY(var(--p1, 0px));
}
